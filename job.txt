#include <stdio.h>
#include <stdlib.h>
#define MAX 100
typedef struct Job {
  char id[2];
  int deadline;
  int profit;
} Job;
void jobSequencingWithDeadline(Job jobs[], int n);
int minValue(int x, int y) {
  if(x < y) return x;
  return y;
}

int main(void) {
  int i, j;
  int n;
  Job *jobs;
  printf("enter no of jobs");
  scanf("%d",&n);
  jobs=(Job*)malloc(sizeof(Job)*n);
  for(i=0;i<n;i++)
  {
    printf("Enter Job ID,profit,Deadline of job %d \n",i+1);
    scanf("%s %d %d",jobs[i].id,&jobs[i].profit,&jobs[i].deadline);
  }
  Job temp;
  for(i = 1; i < n; i++) {
    for(j = 0; j < n - i; j++) {
      if(jobs[j+1].profit > jobs[j].profit) {
        temp = jobs[j+1];
        jobs[j+1] = jobs[j];
        jobs[j] = temp;
      }
    }
  }

  printf("%10s %10s %10s\n", "Job", "Deadline", "Profit");
  for(i = 0; i < n; i++) {
    printf("%10s %10i %10i\n", jobs[i].id, jobs[i].deadline, jobs[i].profit);
  }
  jobSequencingWithDeadline(jobs, n);
  return 0;
}
void jobSequencingWithDeadline(Job jobs[], int n) {
  int i, j, k, maxprofit;
  int timeslot[MAX];
  int count = 0;
  int dmax = 0;
  for(i = 0; i < n; i++) {
    if(jobs[i].deadline > dmax) {
      dmax = jobs[i].deadline;
    }
  }
  for(i = 0; i <dmax; i++) {
    timeslot[i] = -1;
  }
  for(i = 0; i < n; i++) {
    k = minValue(dmax, jobs[i].deadline);
    while(k>=1){
    if(k >= 1){
      if(timeslot[k-1] == -1) {
        timeslot[k-1] = i;
        count++;
        break;
      }
      k--;
  }
  }
    if(count == dmax) {
      break;
    }
  }
  for(i = 0; i <dmax; i++) {
    printf("%d",timeslot[i]);
  }
  printf("\nRequired Jobs: ");
  for(i = 0; i < dmax; i++) {
    printf("%s", jobs[timeslot[i]].id);
    if(i < dmax) {
      printf(" --> ");
    }
  }
  maxprofit = 0;
  for(i = 1; i <= dmax; i++) {
    maxprofit += jobs[timeslot[i]].profit;
  }
  printf("\nMax Profit: %d\n", maxprofit);
}